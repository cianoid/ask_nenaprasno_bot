name: ask_nenaprasno_bot_deploy

on:
  push:
    branches:
      - develop

jobs:
  build_and_push_ask_nenaprasno_bot_image:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ask_nenaprasno_bot:latest

  deploy:
    name: Deploy it
    runs-on: ubuntu-latest
    needs: build_and_push_ask_nenaprasno_bot_image

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd code
            sudo rm -f .env
            touch .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
            echo BOT_PORT=${{ secrets.BOT_PORT }} >> .env
            echo WEBHOOK_URL=${{ secrets.WEBHOOK_URL }} >> .env
            echo HOST=${{ secrets.HOST }} >> .env
            echo SECRET_TELEGRAM_TOKEN=${{ secrets.SECRET_TELEGRAM_TOKEN }} >> .env
            echo WEEKLY_STAT_TIME=${{ secrets.WEEKLY_STAT_TIME }} >> .env
            echo WEEKLY_STAT_WEEK_DAYS=${{ secrets.WEEKLY_STAT_WEEK_DAYS }} >> .env
            echo MONTHLY_STAT_TIME=${{ secrets.MONTHLY_STAT_TIME }} >> .env
            echo MONTHLY_STAT_DAY=${{ secrets.MONTHLY_STAT_DAY }} >> .env
            echo MONTHLY_RECEIPT_REMINDER_TIME=${{ secrets.MONTHLY_RECEIPT_REMINDER_TIME }} >> .env
            echo MONTHLY_RECEIPT_REMINDER_DAY=${{ secrets.MONTHLY_RECEIPT_REMINDER_DAY }} >> .env
            echo DAYLY_COLLECT_CONSULTATIONS_TIME=${{ secrets.DAYLY_COLLECT_CONSULTATIONS_TIME }} >> .env
            echo DAILY_REMINDER_FOR_OVERDUE_CONSULTATIONS=${{ secrets.DAILY_REMINDER_FOR_OVERDUE_CONSULTATIONS }} >> .env
            echo BOT_PERSISTENCE_FILE=${{ secrets.BOT_PERSISTENCE_FILE }} >> .env
            echo SITE_API_URL=${{ secrets.SITE_API_URL }} >> .env
            echo IS_FAKE_API=${{ secrets.IS_FAKE_API }} >> .env
            echo SITE_API_BOT_TOKEN=${{ secrets.SITE_API_BOT_TOKEN }} >> .env
            echo LOG_NAME=${{ secrets.LOG_NAME }} >> .env
            echo TRELLO_API_KEY=${{ secrets.TRELLO_API_KEY }} >> .env
            echo TRELLO_ID_MODEL=${{ secrets.TRELLO_ID_MODEL }} >> .env
            echo TRELLO_TOKEN=${{ secrets.TRELLO_TOKEN }} >> .env
            echo TRELLO_BORD_ID=${{ secrets.TRELLO_BORD_ID }} >> .env

            docker pull ${{ secrets.DOCKER_USERNAME }}/ask_nenaprasno_bot:latest
            docker-compose stop
            docker-compose rm bot -f
            docker-compose up -d

            cp /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default.backup
            docker-compose cp bot:/code/src/infra/robots.txt .
            docker-compose cp bot:/code/src/infra/nginx.conf .
            sed -i "s+{{ROBOTS_FULL_PATH}}+$(pwd)+g" nginx.conf
            sed -i 's/{{IP}}/${{ secrets.IP }}/g' nginx.conf
            sed -i 's/{{DOMAIN}}/${{ secrets.DOMAIN }}/g' nginx.conf
            sed -i 's/{{BOT_PORT}}/${{ secrets.BOT_PORT }}/g' nginx.conf
            cp nginx.conf /etc/nginx/sites-enabled/default
            service reload nginx
